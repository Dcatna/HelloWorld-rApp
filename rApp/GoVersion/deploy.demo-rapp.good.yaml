apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "18"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"demo-rapp","namespace":"istio-nonrtric"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"demo-rapp"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"true"},"labels":{"app":"demo-rapp"}},"spec":{"containers":[{"args":["pip install fastapi uvicorn httpx \u003e/dev/null \\\n\u0026\u0026 python - \u003c\u003c'PY' \u003e /app/rapp.py\n# (paste the Python from above here if you prefer inline)\nPY\n# or mount it via ConfigMap; inline keeps it simple\npython -c \"import shutil,sys;shutil.copyfile('/app/rapp.py','/tmp/rapp.py')\" \u0026\u0026 \\\nuvicorn /tmp/rapp:app --host 0.0.0.0 --port 8080\n"],"command":["sh","-lc"],"env":[{"name":"PMS_URL","value":"http://policy-agent:8081"},{"name":"SERVICE_ID","value":"demo-rapp"},{"name":"RIC_ID","value":"ric2"},{"name":"POLICY_ID","value":"demo-policy-3"},{"name":"POLICY_TYPE_ID","value":""},{"name":"PORT","value":"8080"}],"image":"python:3.12-alpine","name":"app","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":5}}]}}}}
  creationTimestamp: "2025-08-19T20:13:12Z"
  generation: 18
  name: demo-rapp
  namespace: istio-nonrtric
  resourceVersion: "556181"
  uid: d2d4cc0a-7d1a-4f9a-8b85-0b8b597ed7f9
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demo-rapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-08-20T15:53:26-04:00"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        app: demo-rapp
    spec:
      containers:
      - env:
        - name: PMS_URL
          value: http://policy-agent:8081
        - name: SERVICE_ID
          value: demo-rapp
        - name: RIC_ID
          value: ric2
        - name: POLICY_ID
          value: demo-policy-3
        - name: POLICY_TYPE_ID
        - name: PORT
          value: "8080"
        - name: CALLBACK_URL
          value: http://demo-rapp:8080/callback
        image: go-rapp:dev
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: app
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/rapp.py
          name: code
          readOnly: true
          subPath: rapp.py
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: demo-rapp-code
        name: code
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-08-19T20:29:37Z"
    lastUpdateTime: "2025-08-19T20:29:37Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-08-20T19:48:21Z"
    lastUpdateTime: "2025-08-20T19:53:38Z"
    message: ReplicaSet "demo-rapp-58cbc54585" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 18
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
